buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://github.com/juanmuscaria/maven/raw/master"
        }
    }
    dependencies {
        classpath('net.minecraftforge.gradle:ForgeGradle:1.2-1.4.6-SNAPSHOT')
    }
}

apply plugin: 'forge'

[compileJava, compileTestJava, compileApiJava]*.options*.encoding = 'UTF-8'
targetCompatibility = sourceCompatibility =
compileJava.targetCompatibility = compileJava.sourceCompatibility = JavaVersion.VERSION_1_8

version = "1.7.10-1.0.2"
group = "ru.wertyfiregames.wertyfirecore"
archivesBaseName = "wertyfire-core"

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "run"
}

repositories {
    maven {
        name = "wertyfireMaven"
        url = "https://raw.githubusercontent.com/Wertyfire/Versions/main/maven/"
    }
}

dependencies {
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

apply plugin: 'maven-publish'
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifactId = archivesBaseName

            artifact sourcesJar {
                classifier 'sources'
            }

            artifact devJar {
                classifier 'dev'
            }

            pom.withXml {
                asNode().dependencies[0].children().clear()

                asNode().appendNode('name', 'WertyfireCore')
                asNode().appendNode('description', 'Core mod-library for mods by Wertyfire')
                asNode().appendNode('url', 'https://github.com/Wertyfire/WertyfireCore/tree/1.7.10')

                def licensesNode = asNode().appendNode('licenses')
                def mitLicense = licensesNode.appendNode('license')
                mitLicense.appendNode('name', 'MIT License')
                mitLicense.appendNode('url', 'https://raw.githubusercontent.com/Wertyfire/WertyfireCore/1.7.10/LICENSE')

                def developersNode = asNode().appendNode('developers')
                def wertyfireDeveloper = developersNode.appendNode('developer')
                wertyfireDeveloper.appendNode('id', 'Wertyfire')
            }
        }
    }
}

task devJar(type: Jar) {
    classifier = 'dev'
    from sourceSets.main.output
}
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
artifacts {
    archives devJar
    archives sourcesJar
}